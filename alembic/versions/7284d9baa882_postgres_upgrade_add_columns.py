"""postgres upgrade add columns

Revision ID: 7284d9baa882
Revises: f5e433ec17da
Create Date: 2025-10-15 13:58:40.543114

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7284d9baa882'
down_revision: Union[str, Sequence[str], None] = 'f5e433ec17da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blogs')
    op.add_column('users', sa.Column('name', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('refresh_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('refresh_token_expires_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'refresh_token_expires_at')
    op.drop_column('users', 'refresh_token')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'name')
    op.create_table('blogs',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('blogs_author_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('blogs_pkey'))
    )
    # ### end Alembic commands ###
